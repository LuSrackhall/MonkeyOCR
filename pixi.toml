[workspace]
channels = ["conda-forge"]
name = "MonkeyOCR"
platforms = ["linux-64"]
version = "0.1.0"

[tasks]

[dependencies]
python = "3.10.*"

[feature.gpu]
system-requirements = { cuda = "12.6" }

[feature.gpu.pypi-dependencies]
paddlepaddle-gpu = { version = "==3.1.0", index = "https://www.paddlepaddle.org.cn/packages/stable/cu129/" }
# CUDA 12.6
# torch = { version = "==2.6.0", index = "https://download.pytorch.org/whl/cu126" }
# torchvision = { version = "==0.21.0", index = "https://download.pytorch.org/whl/cu126" }
# torchaudio = { version = "==2.6.0", index = "https://download.pytorch.org/whl/cu126" }
# CUDA 11.8
torch = { version = "==2.6.0", index = "https://download.pytorch.org/whl/cu118" }
torchvision = { version = "==0.21.0", index = "https://download.pytorch.org/whl/cu118" }
torchaudio = { version = "==2.6.0", index = "https://download.pytorch.org/whl/cu118" }

# 依赖将会安装在.pixi/envs/default/bin 目录下, 可通过cat命令查看其入口文件内容, 或使用vim编辑器修改其入口文件内容。 
# * 'which+依赖名称'可以查询依赖的安装路径。 因此可以使用 `cat $(which+依赖名称)` 或 `vi $(which+依赖名称)`
[pypi-dependencies]
# paddlex = { path = "MonkeyOCR/PaddleX", editable = true, extras = ["base"] }
paddlex = { path = "MonkeyOCR/PaddleX", extras = ["base"] }
magic_pdf = { path = "MonkeyOCR", editable = true }
# CUDA 12.6
# lmdeploy = "==0.8.0"
# CUDA 11.8
# pip install https://github.com/InternLM/lmdeploy/releases/download/v0.8.0/lmdeploy-0.8.0+cu118-cp310-cp310-manylinux2014_x86_64.whl --extra-index-url https://download.pytorch.org/whl/cu118
# # 其中的 --extra-index-url https://download.pytorch.org/whl/cu118 我指定在了[tool.pixi.pypi-options]中
lmdeploy = { url = "https://github.com/InternLM/lmdeploy/releases/download/v0.8.0/lmdeploy-0.8.0+cu118-cp310-cp310-manylinux2014_x86_64.whl" }
# huggingface-hub = ">=0.34.4, <0.35"  # 两个模型下载渠道任选其一, 本部署选择使用modelscope来下载模型。
modelscope = ">=1.29.0, <2"

[tool.pixi.pypi-options]
extra-index-url = ["https://download.pytorch.org/whl/cu118"]

[environments]
# cpu = { features = ["cpu"] }
gpu = { features = ["gpu"] }
default = { features = ["gpu"] }
